Database Schema Overview:

Filled in (Green/Blue) Diamond means: NOT NULL
Filled in (Red) Diamond means: NOT NULL + Foreign Key
Unfilled Diamond: Can be NULL

-----------------------------

Create Films Table:

Select * from sys.sys_config;

create database cinema_booking_system;
use cinema_booking_system;
create table films (
id INT primary key AUTO_INCREMENT,
name varchar(45) NOT NULL UNIQUE,
length_min INT NOT NULL
);

show tables;
select * from films;
describe films;

-------------------------------

Create Customers Table:

CREATE TABLE customers (

	id INT PRIMARY KEY AUTO_INCREMENT,
	first_name VARCHAR(45),
	last_name VARCHAR(45) NOT NULL,
	email VARCHAR(45) NOT NULL UNIQUE
);



--------------------------------

Create Rooms Table:

CREATE TABLE rooms (

	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(45) NOT NULL,
	no_seats INT NOT NULL
);

---------------------------------

Create Screenigs Table:

Create Table screenigs (
id INT primary key AUTO_INCREMENT,
film_id int not null, 
room_id int not null,
start_time datetime NOT NULL,
Foreign key (film_id) references films(id),
Foreign key (room_id) references rooms(id)
);

----------------------------------

Create Seats Table:

Create table seats (
id int primary key auto_increment,
rowsvalue CHAR (1) not null,
number INT NOT NULL,
room_id INT NOT NULL,
foreign key (room_id) references rooms(id)
);

------------------------------------

Create Table Bookings:

Create Table bookings (
id int primary key auto_increment,
screening_id int not null,
customer_id int not null,
Foreign key (screening_id) references screenigs(id),
Foreign key (customer_id) references customers(id)
);

-------------------------------------
